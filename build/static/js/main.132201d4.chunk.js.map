{"version":3,"sources":["pokeball.png","COMPONENTS/navigation.js","COMPONENTS/colors.js","COMPONENTS/pokemonType.js","COMPONENTS/pokemonList.js","COMPONENTS/home.js","COMPONENTS/about.js","COMPONENTS/details/titleBlock.js","COMPONENTS/details/EVOLUTION-PHASE/firstPokemon.js","COMPONENTS/details/EVOLUTION-PHASE/secondPokemon.js","COMPONENTS/details/EVOLUTION-PHASE/thirdPokemon.js","COMPONENTS/details/evolutionChain.js","COMPONENTS/details/baseStat.js","COMPONENTS/details/dataBlock.js","COMPONENTS/details/abilities.js","COMPONENTS/details/majorStat.js","COMPONENTS/details.js","COMPONENTS/pokemon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navigation","className","to","id","colors","color","PokemonType","type","pathname","mycolor","find","name","typeColor","backgroundColor","style","PokemonList","pokemon","index","useState","sprite","setSprite","types","setTypes","spriteRef","useRef","useEffect","axios","get","url","then","res","newOrder","order","data","map","currentPage","slice","search","removedOrder","finalOrder","pokemonOrderVersionOne","parseInt","pokemonOrderVersionTwo","toString","alt","src","pokeball","ref","key","nextPrev","position","width","top","left","transform","display","justifyContent","loader","bottom","zIndex","alignItems","Home","props","pokemonList","setpokemonList","setCurrentPage","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","showRegionsRef","regionsWrapper","currentRegion","setCurrentRegion","isRegionSelectedForTheFirstTime","setisRegionSelectedForTheFirstTime","regions","next","fontSize","borderRadius","height","placeItems","opacity","prev","results","previous","some","region","goToPage","action","console","log","pokemonLists","location","showRegions","current","classList","toggle","onClick","regionName","forEach","About","textAlign","TitleBlock","title","padding","letterSpacing","marginBottom","fontWeight","FirstPokemon","firstPokemon","componentStyle","SecondPokemon","secondPokemon","ThirdPokemon","thirdPokemon","EvolutionChain","evolutionChainUrl","evolutionChain","setEvolutionChain","pokemonColor","chain","first","species","getImageId","second","evolves_to","third","pokemonLast","mod","length","catch","err","withSlash","pokemonID","gridTemplateColumns","gridGap","BaseStat","pokemonData","statusBackGround","valueBorder","border","stats","stat","base_stat","EggGroups","content","titles","Abilities","children","MajorStat","abilities","heightWeight","specie","ability","is_hidden","weight","habitat","egg_groups","growth_rate","Details","pokemonMainDetails","setSpecie","setPokemonData","egg","evolution_chain_url","evolution_chain","borderColor","Pokemon","match","params","prevPokemon","setPrevPokemon","nextPokemon","setNextPokemon","idNumberPrev","prevPokemonIdString","idNumberNext","nextPokemonIdString","App","exact","path","component","React","Component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.132201d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.fd721f81.png\";","import React from 'react';\r\nimport { Link , NavLink } from 'react-router-dom';\r\n \r\nconst navigation = () => {\r\n    return (\r\n        <nav className=\"pink\">\r\n            <div className=\"container\">\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to=\"/\"className=\"brand-logo\" >\r\n                        POKEREX\r\n                    </Link>\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li><NavLink to=\"/\">Home</NavLink></li>\r\n                        <li><NavLink to=\"/about\">About</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default navigation;","const colors = [\r\n    {\r\n        id: 'normal',\r\n        color: '#FDEFD7' //normal\r\n    },\r\n    {\r\n        id: 'fighting',\r\n        color: '#800000' //fighting\r\n    },\r\n    {\r\n        id: 'flying',\r\n        color: '#DAD2CF' //flying\r\n    },\r\n    {\r\n        id: 'poison',\r\n        color: '#830582' //poison\r\n    },\r\n    {\r\n        id: 'ground',\r\n        color: '#C69856' //ground\r\n    },\r\n    {\r\n        id: 'rock',\r\n        color: '#6C544B' //rock\r\n    },\r\n    {\r\n        id: 'bug',\r\n        color: '#BFCF82' //bug\r\n    },\r\n    {\r\n        id: 'ghost',\r\n        color: '#2A3E67' //ghost\r\n    },\r\n    {\r\n        id: 'steel',\r\n        color: '#CFD2DA' //steel\r\n    },\r\n    {\r\n        id: 'fire',\r\n        color: '#E93837' //fire\r\n    },\r\n    {\r\n        id: 'water',\r\n        color: '#33A6FE' //water\r\n    },\r\n    {\r\n        id: 'grass',\r\n        color: '#65E21E' //grass\r\n    },\r\n    {\r\n        id: 'electric',\r\n        color: '#FFF700' //electric\r\n    },\r\n    {\r\n        id: 'psychic',\r\n        color: '#F155F1' //physic\r\n    },\r\n    {\r\n        id: 'ice',\r\n        color: '#AAFFFF' //ice\r\n    },\r\n    {\r\n        id: 'dragon',\r\n        color: '#550000' //dragon\r\n    },\r\n    {\r\n        id: 'dark',\r\n        color: '#221E1D' //dark\r\n    },\r\n    {\r\n        id: 'fairy',\r\n        color: '#FAC6FA' //fairy\r\n    }\r\n];\r\n\r\nexport default colors;","import React from 'react';\r\nimport colors from './colors';\r\nimport {Link}from 'react-router-dom';\r\n\r\nconst PokemonType = ({type, pathname}) => {\r\n    const mycolor = colors.find(color => {\r\n        return color.id === type.name\r\n    });\r\n\r\n    const typeColor = {\r\n        backgroundColor: mycolor.color,\r\n        color: mycolor.id==='normal' || mycolor.id==='electric' || mycolor.id==='fairy'? 'black':'white'\r\n    }\r\n\r\n    return (\r\n            <p to={`/types`} style={typeColor} className={pathname==='/'? 'type-color': 'type'}>{type.name}</p>\r\n    )\r\n}\r\n\r\nexport default PokemonType;","import React, {useState, useEffect, useRef} from 'react';\r\nimport PokemonType from './pokemonType.js';\r\nimport axios from 'axios';\r\nimport pokeball from '../pokeball.png';\r\nimport '../pokemonCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const spriteContainer = {\r\n//     width: '100%',\r\n//     minHeight: '150px',\r\n//     // backgroundImage: `linear-gradient(to bottom, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.8)), url(${pokeball})`,\r\n//     // backgroundSize: 'cover',\r\n//     // backgroundPosition: 'center',\r\n//     borderRadius: '5px',\r\n//     position: 'relative',\r\n//     border: '2px solid #4E5665',\r\n//     backgroundColor: 'white'\r\n// }\r\n\r\n// var spriteImage = {\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     borderRadius: '5px',\r\n//     transition: '0.5s ease-in',\r\n//     // filter: 'contrast(0%) brightness(50%)'\r\n// }\r\n\r\n// const pokeballIcon = {\r\n//     position: 'absolute',\r\n//     top: '0',\r\n//     left: '0',\r\n//     height: '100%',\r\n//     width: '100%',\r\n//     opacity: '0.2'\r\n// }\r\n\r\n// const pokemonIndex = {\r\n//     height: '30px',\r\n//     width: '30px',\r\n//     borderRadius: '50%',\r\n//     backgroundColor: '#4E5665',\r\n//     color: 'white',\r\n//     position: 'absolute',\r\n//     top: '0',\r\n//     right: '0',\r\n//     transform: 'translate(50%, -50%)',\r\n//     display: 'grid',\r\n//     placeItems: 'center',\r\n//     fontWeight: 'bold',\r\n//     zIndex: '5'\r\n// }\r\n\r\n// const cardDetails = {\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     justifyContent: 'space-between',\r\n//     position: 'relative'\r\n// }\r\n\r\n// const pokemonName = {\r\n//     backgroundColor: '#4E5665',\r\n//     display: 'grid',\r\n//     placeItems: 'center',\r\n//     fontWeight: 'bold',\r\n//     color: 'white',\r\n//     position: 'absolute',\r\n//     top: '0',\r\n//     left: '50%',\r\n//     transform: 'translate(-50%, -50%)',\r\n//     padding: '2px 10px',\r\n//     borderRadius: '5px',\r\n//     whiteSpace: 'nowrap',\r\n//     textTransform: 'capitalize'\r\n// }\r\n\r\n// const pokemonType = {\r\n//     backgroundColor: 'green',\r\n//     display: 'flex',\r\n//     fontWeight: 'bold',\r\n//     color: 'white',\r\n//     position: 'absolute',\r\n//     bottom: '0',\r\n//     width: '100%'\r\n// }\r\n\r\n\r\nconst PokemonList = ({pokemon, index, pathname}) => {\r\n    const [sprite, setSprite] = useState({});\r\n    const [types, setTypes] = useState([]);\r\n    const spriteRef = useRef();\r\n\r\n    useEffect(() => {\r\n        axios.get(pokemon.url)\r\n            .then(res => {\r\n                setSprite({sprite: `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${newOrder}.png`, order: res.data.order});\r\n                setTypes( res.data.types.map(type => { return {name: type.type.name, url: type.type.url}}));\r\n            });\r\n    }, [])\r\n\r\n    let order = pokemon.currentPage.slice(pokemon.currentPage.search('offset')+7);\r\n    let removedOrder = order.slice(0,order.search('&'));\r\n    let finalOrder = (pokemon.currentPage==='https://pokeapi.co/api/v2/pokemon')? 0 : removedOrder;\r\n    let pokemonOrderVersionOne = parseInt(finalOrder)+index;\r\n    let pokemonOrderVersionTwo = (pokemonOrderVersionOne>99)? pokemonOrderVersionOne : (\r\n        (pokemonOrderVersionOne>9)? '0'+pokemonOrderVersionOne.toString() : '00'+pokemonOrderVersionOne.toString()\r\n    );\r\n    let newOrder = parseInt(pokemonOrderVersionTwo)>806? (parseInt(pokemonOrderVersionTwo)+2).toString() : pokemonOrderVersionTwo;\r\n    \r\n    return (\r\n        <div className=\"pokemon-card\">\r\n            <Link to={`/pokemon/${pokemon.name}-${pokemonOrderVersionTwo}`}>\r\n                <div className=\"sprite-container\">\r\n                    <img alt=\"img\" src={pokeball} className=\"pokeball-icon\" />\r\n                    <img    ref={spriteRef}\r\n                            src={sprite.sprite} \r\n                            alt={pokemon.name}\r\n                            className=\"pokemon-icon\" />\r\n                    <div className=\"pokemon-index\">\r\n                        {index}\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div className=\"card-details\">\r\n                <Link to=\"/pokemon\">\r\n                    <div className=\"pokemon-name\">\r\n                        <p>{pokemon.name}</p>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"pokemon-type\">\r\n                    {\r\n                        types.map((type, index) => {\r\n                            return (\r\n                                <PokemonType type={type} key={index} pathname={pathname}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>  \r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Pokemon from './pokemonList.js';\r\nimport axios from 'axios';\r\nimport './grid.css';\r\n\r\nconst nextPrev = {\r\n    position: 'fixed',\r\n    width: '98%',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n}\r\n\r\nconst loader = {\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: '0',\r\n    bottom: '0',\r\n    width: '100%',\r\n    zIndex: '-1',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n}\r\n\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n    const [pokemonList, setpokemonList] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState('https://pokeapi.co/api/v2/pokemon');\r\n    const [nextPage, setNextPage] = useState('');\r\n    const [prevPage, setPrevPage] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const showRegionsRef = useRef();\r\n    const regionsWrapper = useRef();\r\n    const [currentRegion, setCurrentRegion] = useState('all');\r\n    const [isRegionSelectedForTheFirstTime, setisRegionSelectedForTheFirstTime] = useState(false);\r\n    const [regions] = useState([\r\n        {name: 'all', url: 'https://pokeapi.co/api/v2/pokemon'},\r\n        {name: 'kanto', url: 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=20'},\r\n        {name: 'johto', url: 'https://pokeapi.co/api/v2/pokemon?offset=151&limit=20'},\r\n        {name: 'hoenn', url: 'https://pokeapi.co/api/v2/pokemon?offset=251&limit=20'},\r\n        {name: 'sinnoh', url: 'https://pokeapi.co/api/v2/pokemon?offset=386&limit=20'},\r\n        {name: 'unova', url: 'https://pokeapi.co/api/v2/pokemon?offset=494&limit=20'},\r\n        {name: 'kalos', url: 'https://pokeapi.co/api/v2/pokemon?offset=649&limit=20'},\r\n        {name: 'alola', url: 'https://pokeapi.co/api/v2/pokemon?offset=721&limit=20'},\r\n        {name: 'galar', url: 'https://pokeapi.co/api/v2/pokemon?offset=807&limit=20'},\r\n    ])\r\n\r\n    const next = {\r\n        backgroundColor: '#E91E63',\r\n        fontSize: '1.5rem',\r\n        borderRadius: '50%',\r\n        width: '40px',\r\n        height: '40px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        color: 'white',\r\n        opacity: nextPage===null? '0' : '1'\r\n    }\r\n    \r\n    const prev = {\r\n        backgroundColor: '#E91E63',\r\n        fontSize: '1.5rem',\r\n        borderRadius: '50%',\r\n        width: '40px',\r\n        height: '40px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        color: 'white',\r\n        opacity: prevPage===null? '0' : '1'\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(currentPage)\r\n                .then(res => {\r\n                    setpokemonList(res.data.results.map(pokemon => { return { name: pokemon.name, url: pokemon.url, currentPage: currentPage}})); \r\n                    setNextPage(res.data.next);\r\n                    setPrevPage(res.data.previous);\r\n                    setLoading(false);\r\n                    \r\n\r\n                    if(currentRegion==='all') return;\r\n\r\n                    if(!isRegionSelectedForTheFirstTime) {\r\n                        if(regions.some(region => region.url === currentPage)) {\r\n                            setPrevPage(null);\r\n                            return \r\n                        }\r\n                        return\r\n                    }\r\n                    setPrevPage(null);\r\n                    setisRegionSelectedForTheFirstTime(false);\r\n                });\r\n    }, [currentPage, isRegionSelectedForTheFirstTime, currentRegion, regions]);\r\n\r\n    const goToPage = (action) => {\r\n        if(action==='next'){\r\n            if(nextPage===null) return;\r\n            setCurrentPage(nextPage);\r\n        }\r\n        else {\r\n            if(prevPage===null) return;\r\n            setCurrentPage(prevPage);\r\n            console.log(currentPage);\r\n        }\r\n    } \r\n\r\n    const pokemonLists = loading? (\r\n        <div style={loader} >\r\n            <div className=\"preloader-wrapper big active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                        </div><div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                        </div><div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : \r\n    (\r\n        <div className=\"grid-list\">\r\n            {\r\n                pokemonList.map((pokemon, index) => {\r\n                    return (\r\n                        <Pokemon pokemon={pokemon} index={index+1} key={pokemon.name} pathname={props.location.pathname}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const showRegions = () => {\r\n        showRegionsRef.current.classList.toggle('show-regions');\r\n        regionsWrapper.current.classList.toggle('show-regions-wrapper');\r\n    }\r\n\r\n    const selectRegion = (regionName) => {\r\n        showRegions();\r\n        regions.forEach((region) => {\r\n            if(region.name === regionName) {\r\n                setCurrentPage(region.url);\r\n                setCurrentRegion(regionName);\r\n                setisRegionSelectedForTheFirstTime(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"inner-container\">\r\n                <div className=\"select-region\">\r\n                    <div className=\"selected-value-wrapper\">\r\n                        <div className=\"selected-value\">{currentRegion}</div>\r\n                        <div onClick={showRegions} className=\"caret\">\r\n                            <i className=\"fas fa-angle-down\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"regions\" ref={regionsWrapper}>\r\n                        <div className=\"board\" ref={showRegionsRef}>\r\n                            {\r\n                                regions.map(region => {\r\n                                    return (\r\n                                        <div className=\"region\" onClick={() => {selectRegion(region.name)}} key={region.name}>\r\n                                            <span className=\"region-name\">{region.name}</span>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p className=\"region-label\">Region</p>\r\n                    {\r\n                      pokemonLists\r\n                    }\r\n            </div>\r\n            <div style={nextPrev}>\r\n                <div onClick={() => {goToPage('prev')}} style={prev} className=\"z-depth-2\">\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                </div>\r\n                <div onClick={() => {goToPage('next')}} style={next} className=\"z-depth-2\">\r\n                    <i className=\"fas fa-arrow-right\"></i>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    const aboutPage = {\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        height: '100%'\r\n    }\r\n\r\n    const about = {\r\n        textAlign: 'center'\r\n    }\r\n\r\n    const title = {\r\n        fontSize: '2rem'\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={aboutPage}>\r\n            <div style={about}>\r\n                <h2 style={title}>REACT + POKEDEX = POKEREX</h2>\r\n                <p>\r\n                  Simple pokedex app built with react js, and pokeapi for data.\r\n                  This app is for my personal project only.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst TitleBlock = ({title}) => {\r\n    const style = {\r\n        titleBlock: {\r\n            width: '50%',\r\n            textAlign: 'left',\r\n            backgroundColor: '#4E5665',\r\n            color: 'white',\r\n            padding: '5px 10px',\r\n            fontSize: '1.1rem',\r\n            letterSpacing: '2px',\r\n            borderRadius: '6px',\r\n            marginBottom: '25px',\r\n            fontWeight: '600'\r\n        }\r\n    }\r\n    return (\r\n        <div style={style.titleBlock}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default TitleBlock;","import React from 'react';\r\n\r\nconst FirstPokemon = ({firstPokemon, componentStyle}) => {\r\n    return (\r\n        <div className=\"first-evolution-collection\" style={componentStyle.firstPokemon} >\r\n            {  \r\n                firstPokemon?\r\n                (\r\n                    <div className=\"first evolution-phase\">\r\n                        <img className=\"evolution-pic\" src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${firstPokemon.id}.png`} />\r\n                        <div className=\"evolve-name\" >{firstPokemon.name}</div>\r\n                    </div>\r\n                ):\r\n                (\r\n                    <p>LOADING...</p>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstPokemon;","import React from 'react';\r\n\r\nconst SecondPokemon = ({secondPokemon, componentStyle}) => {\r\n    return (\r\n        <div className=\"second-evolution-collection\" style={componentStyle.secondPokemon}>\r\n            {\r\n                secondPokemon?\r\n                (\r\n                    secondPokemon.map(secondPokemon => {\r\n                        return (\r\n                            <div className=\"second evolution-phase\" key={secondPokemon.id}>\r\n                                <img className=\"evolution-pic\" src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${secondPokemon.id}.png`} />\r\n                                <div className=\"evolve-name\" >{secondPokemon.name}</div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                ):\r\n                <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondPokemon;","import React from 'react';\r\n\r\nconst ThirdPokemon = ({thirdPokemon, componentStyle}) => {\r\n    return (\r\n        <div className=\"third-evolution-collection\" style={componentStyle.thirdPokemon} >\r\n            {\r\n                thirdPokemon?\r\n                (\r\n                    <div className=\"third evolution-phase\">\r\n                        <img className=\"evolution-pic\" src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${thirdPokemon.id}.png`} />\r\n                        <div className=\"evolve-name\" >{thirdPokemon.name}</div>\r\n                    </div>\r\n                ):\r\n                <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThirdPokemon;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport TitleBlock from './titleBlock.js';\r\nimport FirstPokemon from './EVOLUTION-PHASE/firstPokemon.js';\r\nimport SecondPokemon from './EVOLUTION-PHASE/secondPokemon.js';\r\nimport ThirdPokemon from './EVOLUTION-PHASE/thirdPokemon.js';\r\n\r\nconst EvolutionChain = ({evolutionChainUrl, color}) => {\r\n    const [evolutionChain, setEvolutionChain] = useState(true);\r\n    const pokemonColor = color;\r\n\r\n    useEffect(() => {\r\n        const url = evolutionChainUrl;\r\n        axios.get(url)\r\n            .then(res => {\r\n                let chain = {\r\n                    first: {\r\n                        name: res.data.chain.species.name,\r\n                        id: getImageId(res.data.chain.species.url)\r\n                    },\r\n                    second: res.data.chain.evolves_to? res.data.chain.evolves_to.map(pokemon => {return {name: pokemon.species.name, id: getImageId(pokemon.species.url)}}) : null,\r\n                    third: res.data.chain.evolves_to.map(pokemon => {\r\n                        return (pokemon.evolves_to? (\r\n                            pokemon.evolves_to.map(pokemonLast => {\r\n                                return {\r\n                                    name: pokemonLast.species.name,\r\n                                    id: getImageId(pokemonLast.species.url)\r\n                                }\r\n                            })\r\n                        ):null)\r\n                    })\r\n                }\r\n                let mod = {\r\n                    ...chain,\r\n                    third: chain.third[0].length? chain.third[0][0] : null\r\n                }\r\n                setEvolutionChain(mod)\r\n            })\r\n            .catch(err => console.log(err))\r\n    },)\r\n\r\n    const getImageId = (url) => {\r\n        let withSlash = url.slice(42);\r\n        let pokemonID = withSlash.slice(0,withSlash.search('/'));\r\n        let pokemonIDString = (pokemonID>99)? pokemonID : (\r\n            (pokemonID>9)? '0'+pokemonID.toString() : '00'+pokemonID.toString());\r\n        return pokemonIDString;\r\n    }\r\n\r\n    // DYNAMIC STYLING\r\n    const style = {\r\n\r\n        firstPokemon: {\r\n            backgroundColor: `${pokemonColor}`\r\n        },\r\n        secondPokemon: {\r\n            gridTemplateColumns: evolutionChain.second? (evolutionChain.second.length===1? '1fr' : '1fr 1fr') : '1fr 1fr',\r\n            gridGap: '25px',\r\n            backgroundColor: pokemonColor,\r\n            display: `${evolutionChain.second? 'grid' : 'none'}`\r\n        },\r\n        thirdPokemon: {\r\n            backgroundColor: pokemonColor,\r\n            display: `${evolutionChain.third? 'grid' : 'none'}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"evolution-chain\" >\r\n            <TitleBlock title={'Evolution Chain'} />\r\n            <div className=\"evolution-chain-wrapper\">\r\n                <FirstPokemon componentStyle={style} firstPokemon={evolutionChain.first} />\r\n                <SecondPokemon componentStyle={style} secondPokemon={evolutionChain.second} />\r\n                <ThirdPokemon componentStyle={style} thirdPokemon={evolutionChain.third} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EvolutionChain;\r\n","import React from 'react';\r\nimport TitleBlock from './titleBlock.js';\r\n\r\nconst BaseStat = ({pokemonData, color}) => {\r\n    const style = {\r\n        statusBackGround: {\r\n            backgroundColor: `${color ?? \"#4E5665\"}`,\r\n            color: `${color==='white' || color==='yellow'? \"black\":  \"white\"}`\r\n        },\r\n        valueBorder: {\r\n            border: `2px solid ${color ?? \"#4E5665\"}`,\r\n            backgroundColor: `${color==='white'? \"#eee\":  \"white\"}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"base-stat\">\r\n            <TitleBlock title={'Base Stat'} />\r\n            <div className=\"base-stat-wrapper\">\r\n                {\r\n                    pokemonData.stats? \r\n                    (\r\n                        pokemonData.stats.map(stat => {\r\n                            return (\r\n                                <div className=\"base-stat-name\" key={stat.stat.name}>\r\n                                    <div className=\"status\" style={style.statusBackGround}>{stat.stat.name}</div>\r\n                                    <div className=\"value\" style={style.valueBorder}>{stat.base_stat}</div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    ):\r\n                    (\r\n                        <p>Loading...</p>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseStat;","import React from 'react';\r\n\r\nconst EggGroups = ({content, titles}) => {\r\n    return (\r\n        <div className=\"egg-groups stat-container\">\r\n            {\r\n                titles.map(title => {\r\n                    return (\r\n                        <div key={title} className={`title ${title}-title`}>{title}</div>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <div className=\"content\">\r\n                {   \r\n                    content? (\r\n                        content.map((data, index) => {\r\n                            return (\r\n                                <p key={index}>\r\n                                    {data.name}\r\n                                </p>\r\n                            )\r\n                        })\r\n                    ):\r\n                    (\r\n                        <p>LOADING....</p>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EggGroups;","import React from 'react';\r\n\r\nconst Abilities = (props) => {\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\n export default Abilities;","import React from 'react';\r\nimport DataBlock from './dataBlock.js';\r\nimport Abilities from './abilities.js';\r\n\r\nconst MajorStat = ({abilities, heightWeight, specie}) => {\r\n    return (\r\n        <div className=\"stat\">\r\n            <Abilities abilities={abilities}>\r\n                <div className=\"ability stat-container\">\r\n                    <div className=\"title ability-title\">Ability</div>\r\n                    <div className=\"content\">\r\n                        {   \r\n                            abilities? \r\n                            (abilities.map(ability => {\r\n                                return(\r\n                                    <p key={ability.ability.name}>\r\n                                        {ability.ability.name}\r\n                                        {ability.is_hidden? (<small className=\"hidden-ability\">Hidden Ability</small>) : (<></>)}\r\n                                    </p>\r\n                                )\r\n                            }))\r\n                            :\r\n                            (\r\n                                <p>LOADING....</p>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Abilities>  \r\n            <DataBlock\r\n                content={[{name: heightWeight.height}, {name: heightWeight.weight}]}\r\n                titles={[\"height\", \"weight\"]}\r\n            />\r\n            <DataBlock \r\n                content={specie.habitat}\r\n                titles={[\"habitat\"]}\r\n            />\r\n            <DataBlock \r\n                content={specie.egg_groups}\r\n                titles={[\"egg-groups\"]}\r\n            />\r\n            <DataBlock \r\n                content={specie.growth_rate}\r\n                titles={[\"growth-rate\"]}\r\n            />\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default MajorStat;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../pokemonDetails.css';\r\nimport '../details.css';\r\nimport pokeball from '../pokeball.png';\r\nimport PokemonType from './pokemonType.js';\r\nimport EvolutionChain from './details/evolutionChain.js';\r\nimport BaseStat from './details/baseStat.js';\r\nimport MajorStat from './details/majorStat.js';\r\n\r\nconst Details = ({pokemonMainDetails, loading}) => {\r\n    const [specie,setSpecie] = useState({});\r\n    const [pokemonData, setPokemonData] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon-species/${parseInt(pokemonMainDetails.id)}`)\r\n            .then(res => {\r\n                setSpecie({\r\n                    habitat: [res.data.habitat? res.data.habitat : 'N/A'],\r\n                    egg_groups: res.data.egg_groups.map(egg => egg),\r\n                    growth_rate: [res.data.growth_rate],\r\n                    color: res.data.color.name,\r\n                    evolution_chain_url: res.data.evolution_chain.url\r\n                });\r\n                console.log(specie)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${parseInt(pokemonMainDetails.id)}`)\r\n            .then(res => {\r\n                setPokemonData(res.data);\r\n                console.log(specie.color);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })    \r\n    }, [loading]);\r\n\r\n\r\n   const borderColor = {\r\n       border: `5px solid ${specie.color ?? 'black'}`\r\n   }\r\n\r\n    return (\r\n        <div className=\"details-wrapper\">\r\n            <div className=\"name-specie-wrapper\">\r\n                <div className=\"name-specie\">\r\n                    <img className=\"pokeball-icons\" src={pokeball} height=\"50%\"/>\r\n                    <div className=\"specie-wrapper\">\r\n                        <p className=\"name\">{pokemonMainDetails.name}</p>\r\n                        <p className=\"specie\">{pokemonMainDetails.id}</p>\r\n                    </div>\r\n                    <img className=\"pokeball-icons\" src={pokeball} height=\"50%\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"pokemon-image\">\r\n                <div className=\"pic-wrapper\" style={borderColor}>\r\n                    {\r\n                        loading? (\r\n                            <img src={pokeball} className=\"pokeball-bounce\" />\r\n                        ) : \r\n                        (<img className=\"pic\" src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${pokemonMainDetails.id}.png`} />)\r\n                    }\r\n                </div>\r\n                <div className=\"types\">\r\n                    {\r\n                        pokemonData.types?\r\n                        (\r\n                            pokemonData.types.map((type, index) => {\r\n                                return(\r\n                                    <PokemonType type={type.type} key={index} className=\"type\"/>\r\n                                )\r\n                            })\r\n                        )\r\n                        :\r\n                        (\r\n                            <p>LOADING....</p>\r\n                        )\r\n                    }\r\n                    \r\n                </div>  \r\n            </div>  \r\n            <MajorStat\r\n                abilities={pokemonData.abilities} \r\n                heightWeight={{height: pokemonData.height, weight: pokemonData.weight}}\r\n                specie={specie}\r\n            />      \r\n            \r\n            <BaseStat   \r\n                pokemonData={pokemonData} \r\n                color={specie.color}\r\n            />\r\n           \r\n            <EvolutionChain\r\n                evolutionChainUrl={specie.evolution_chain_url} \r\n                color={specie.color}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Details from './details.js';\r\nimport '../pokemonDetails.css';\r\nimport '../pokemonPage.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Pokemon = ({match}) => {\r\n    const {pokemon, id} = match.params;\r\n    const [prevPokemon, setPrevPokemon] = useState({});\r\n    const [nextPokemon, setNextPokemon] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        if(id!==\"001\") {\r\n            axios.get(`https://pokeapi.co/api/v2/pokemon/${idNumberPrev}`)\r\n            .then(res => {\r\n                setPrevPokemon({name: res.data.name, id: prevPokemonIdString});\r\n                setLoading(false);\r\n            });\r\n        }\r\n\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${idNumberNext}`)\r\n        .then(res => {\r\n            setNextPokemon({name: res.data.name, id: nextPokemonIdString});\r\n            setLoading(false);\r\n        });\r\n    }, [match]);\r\n\r\n    let idNumberPrev = parseInt(id) - 1;\r\n    let prevPokemonIdString = (idNumberPrev>99)? idNumberPrev : (\r\n        (idNumberPrev>9)? '0'+idNumberPrev.toString() : '00'+idNumberPrev.toString()\r\n    );\r\n\r\n    let idNumberNext = parseInt(id) + 1;\r\n    let nextPokemonIdString = (idNumberNext>99)? idNumberNext : (\r\n        (idNumberNext>9)? '0'+idNumberNext.toString() : '00'+idNumberNext.toString()\r\n    );\r\n\r\n    return (\r\n        <div>\r\n           <div className=\"details-container\">\r\n                <div className=\"pokemon-navigation\">\r\n                    <div className=\"prev-wrapper\">\r\n                        {\r\n                            id===\"001\"? (<></>):\r\n                            (\r\n                                <div className=\"prev-btn\">\r\n                                    <Link to={`/pokemon/${prevPokemon.name}-${prevPokemon.id}`}>\r\n                                        <div className=\"prev-image-wrapper\">\r\n                                            <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${prevPokemon.id}.png`} className=\"prev-image\" width=\"100%\" />\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div className=\"prev-order\">{prevPokemon.id ?? 'LOADING...'}</div>\r\n                                    <Link to={`/pokemon/${prevPokemon.name}-${prevPokemon.id}`}>\r\n                                        <div className=\"prev-name\">{prevPokemon.name ?? 'LOADING...'}</div>\r\n                                    </Link>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <Details pokemonMainDetails={{name: pokemon, id: id}} loading={loading}/>\r\n                    <div className=\"next-wrapper\">\r\n                        <div className=\"next-btn\">\r\n                            <Link to={`/pokemon/${nextPokemon.name}-${nextPokemon.id}`}>\r\n                                <div className=\"next-image-wrapper\">\r\n                                    <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${nextPokemon.id}.png`} className=\"next-image\" width=\"75px\" />\r\n                                </div>\r\n                            </Link>\r\n                            <Link to={`/pokemon/${nextPokemon.name}-${nextPokemon.id}`}>\r\n                                <div className=\"next-name\">{nextPokemon.name}</div>\r\n                            </Link>\r\n                            <div className=\"next-order\">{nextPokemon.id}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Nav from './COMPONENTS/navigation.js';\nimport Home from './COMPONENTS/home.js';\nimport About from './COMPONENTS/about.js';\nimport Pokemon from './COMPONENTS/pokemon.js'\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"APP\">\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/pokemon/:pokemon-:id\" component={Pokemon} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}